{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(cp:*)",
      "Bash(env:*)",
      "Bash(find:*)",
      "Bash(gh:*)",
      "Bash(git:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(nix:*)",
      "Bash(rg:*)",
      "Bash(touch:*)",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:release-plz.dev)",
      "Bash(gemini:*)",
      "Bash(../../target/debug/cuenv env --help)",
      "Bash(export)",
      "Bash(../../target/debug/cuenv hook bash:*)",
      "Bash(cargo build:*)",
      "Bash(target/debug/cuenv:*)",
      "Bash(printenv)",
      "Bash(cargo test:*)",
      "Bash(cargo insta test:*)",
      "Bash(timeout 5 nix develop:*)",
      "Bash(CUENV_LOG=trace cuenv task --output=simple counted)",
      "Bash(cuenv task:*)",
      "Bash(CUENV_LOG=debug cuenv task --output=simple counted)",
      "WebSearch",
      "WebFetch(domain:d2lang.com)",
      "Bash(timeout 30 nix develop -c:*)",
      "Bash(RUST_LOG=debug timeout 30 bash -c \"export NIXPKGS_ALLOW_UNFREE=1 && nix develop --command bash -c ''''cargo check --bin cuenv''''\")",
      "Bash(timeout 10 rustc:*)",
      "Bash(timeout:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(journalctl:*)",
      "Bash(dmesg:*)",
      "Bash(last:*)",
      "Bash(sudo dmesg:*)",
      "Bash(sudo journalctl:*)",
      "Bash(cat:*)",
      "Bash(top:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(echo \"Processing $file\")",
      "Bash(done)",
      "Bash(./target/debug/cuenv task:*)",
      "Bash(CUENV_LOG=trace timeout 5 nix develop -c cuenv task ci)",
      "Bash(CUENV_LOG=debug timeout 5 nix develop -c cuenv task counted)",
      "Bash(export CUENV_LOG=trace)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  },
  "hooks": {
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "nix fmt"
          }
        ]
      }
    ]
  }
}